{"ast":null,"code":"import React from 'react';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useTypingContext } from '../../context/TypingContext';\n/**\n * TypingIndicator lists users currently typing, it needs to be a child of Channel component\n */\nvar UnMemoizedTypingIndicator = function (props) {\n  var _a = props.Avatar,\n    Avatar = _a === void 0 ? DefaultAvatar : _a,\n    _b = props.avatarSize,\n    avatarSize = _b === void 0 ? 32 : _b,\n    threadList = props.threadList;\n  var _c = useChannelStateContext(),\n    channelConfig = _c.channelConfig,\n    thread = _c.thread;\n  var client = useChatContext().client;\n  var _d = useTypingContext().typing,\n    typing = _d === void 0 ? {} : _d;\n  if ((channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.typing_events) === false) {\n    return null;\n  }\n  var typingInChannel = !threadList ? Object.values(typing).filter(function (_a) {\n    var _b;\n    var parent_id = _a.parent_id,\n      user = _a.user;\n    return (user === null || user === void 0 ? void 0 : user.id) !== ((_b = client.user) === null || _b === void 0 ? void 0 : _b.id) && !parent_id;\n  }) : [];\n  var typingInThread = threadList ? Object.values(typing).filter(function (_a) {\n    var _b;\n    var parent_id = _a.parent_id,\n      user = _a.user;\n    return (user === null || user === void 0 ? void 0 : user.id) !== ((_b = client.user) === null || _b === void 0 ? void 0 : _b.id) && parent_id === (thread === null || thread === void 0 ? void 0 : thread.id);\n  }) : [];\n  return React.createElement(\"div\", {\n    className: \"str-chat__typing-indicator \" + (threadList && typingInThread.length || !threadList && typingInChannel.length ? 'str-chat__typing-indicator--typing' : '')\n  }, React.createElement(\"div\", {\n    className: 'str-chat__typing-indicator__avatars'\n  }, (threadList ? typingInThread : typingInChannel).map(function (_a, i) {\n    var user = _a.user;\n    return React.createElement(Avatar, {\n      image: user === null || user === void 0 ? void 0 : user.image,\n      key: (user === null || user === void 0 ? void 0 : user.id) + \"-\" + i,\n      name: (user === null || user === void 0 ? void 0 : user.name) || (user === null || user === void 0 ? void 0 : user.id),\n      size: avatarSize,\n      user: user\n    });\n  })), React.createElement(\"div\", {\n    className: 'str-chat__typing-indicator__dots'\n  }, React.createElement(\"span\", {\n    className: 'str-chat__typing-indicator__dot'\n  }), React.createElement(\"span\", {\n    className: 'str-chat__typing-indicator__dot'\n  }), React.createElement(\"span\", {\n    className: 'str-chat__typing-indicator__dot'\n  })));\n};\nexport var TypingIndicator = React.memo(UnMemoizedTypingIndicator);","map":{"version":3,"names":["React","Avatar","DefaultAvatar","useChannelStateContext","useChatContext","useTypingContext","UnMemoizedTypingIndicator","props","_a","_b","avatarSize","threadList","_c","channelConfig","thread","client","_d","typing","typing_events","typingInChannel","Object","values","filter","parent_id","user","id","typingInThread","createElement","className","length","map","i","image","key","name","size","TypingIndicator","memo"],"sources":["C:/Users/alekh/Desktop/Medical-App/client/node_modules/stream-chat-react/dist/components/TypingIndicator/TypingIndicator.js"],"sourcesContent":["import React from 'react';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useTypingContext } from '../../context/TypingContext';\n/**\n * TypingIndicator lists users currently typing, it needs to be a child of Channel component\n */\nvar UnMemoizedTypingIndicator = function (props) {\n    var _a = props.Avatar, Avatar = _a === void 0 ? DefaultAvatar : _a, _b = props.avatarSize, avatarSize = _b === void 0 ? 32 : _b, threadList = props.threadList;\n    var _c = useChannelStateContext(), channelConfig = _c.channelConfig, thread = _c.thread;\n    var client = useChatContext().client;\n    var _d = useTypingContext().typing, typing = _d === void 0 ? {} : _d;\n    if ((channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.typing_events) === false) {\n        return null;\n    }\n    var typingInChannel = !threadList\n        ? Object.values(typing).filter(function (_a) {\n            var _b;\n            var parent_id = _a.parent_id, user = _a.user;\n            return (user === null || user === void 0 ? void 0 : user.id) !== ((_b = client.user) === null || _b === void 0 ? void 0 : _b.id) && !parent_id;\n        })\n        : [];\n    var typingInThread = threadList\n        ? Object.values(typing).filter(function (_a) {\n            var _b;\n            var parent_id = _a.parent_id, user = _a.user;\n            return (user === null || user === void 0 ? void 0 : user.id) !== ((_b = client.user) === null || _b === void 0 ? void 0 : _b.id) && parent_id === (thread === null || thread === void 0 ? void 0 : thread.id);\n        })\n        : [];\n    return (React.createElement(\"div\", { className: \"str-chat__typing-indicator \" + ((threadList && typingInThread.length) || (!threadList && typingInChannel.length)\n            ? 'str-chat__typing-indicator--typing'\n            : '') },\n        React.createElement(\"div\", { className: 'str-chat__typing-indicator__avatars' }, (threadList ? typingInThread : typingInChannel).map(function (_a, i) {\n            var user = _a.user;\n            return (React.createElement(Avatar, { image: user === null || user === void 0 ? void 0 : user.image, key: (user === null || user === void 0 ? void 0 : user.id) + \"-\" + i, name: (user === null || user === void 0 ? void 0 : user.name) || (user === null || user === void 0 ? void 0 : user.id), size: avatarSize, user: user }));\n        })),\n        React.createElement(\"div\", { className: 'str-chat__typing-indicator__dots' },\n            React.createElement(\"span\", { className: 'str-chat__typing-indicator__dot' }),\n            React.createElement(\"span\", { className: 'str-chat__typing-indicator__dot' }),\n            React.createElement(\"span\", { className: 'str-chat__typing-indicator__dot' }))));\n};\nexport var TypingIndicator = React.memo(UnMemoizedTypingIndicator);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}