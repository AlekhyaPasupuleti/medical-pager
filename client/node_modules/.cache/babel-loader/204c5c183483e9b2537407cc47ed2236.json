{"ast":null,"code":"import React, { useCallback } from 'react';\nimport { AutoCompleteTextarea } from '../AutoCompleteTextarea';\nimport { LoadingIndicator } from '../Loading/LoadingIndicator';\nimport { useMessageInputContext } from '../../context/MessageInputContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nvar UnMemoizedChatAutoComplete = function (props) {\n  var _a = useComponentContext(),\n    SuggestionItem = _a.AutocompleteSuggestionItem,\n    SuggestionList = _a.AutocompleteSuggestionList;\n  var t = useTranslationContext().t;\n  var messageInput = useMessageInputContext();\n  var cooldownRemaining = messageInput.cooldownRemaining,\n    disabled = messageInput.disabled,\n    emojiIndex = messageInput.emojiIndex,\n    innerRef = messageInput.textareaRef;\n  var placeholder = props.placeholder || t('Type your message');\n  var emojiReplace = function (word) {\n    var found = (emojiIndex === null || emojiIndex === void 0 ? void 0 : emojiIndex.search(word)) || [];\n    var emoji = found.filter(Boolean).slice(0, 10).find(function (_a) {\n      var emoticons = _a.emoticons;\n      return !!(emoticons === null || emoticons === void 0 ? void 0 : emoticons.includes(word));\n    });\n    if (!emoji || !('native' in emoji)) return null;\n    return emoji.native;\n  };\n  var updateInnerRef = useCallback(function (ref) {\n    if (innerRef) {\n      innerRef.current = ref;\n    }\n  }, [innerRef]);\n  return React.createElement(AutoCompleteTextarea, {\n    additionalTextareaProps: messageInput.additionalTextareaProps,\n    className: 'str-chat__textarea__textarea',\n    closeCommandsList: messageInput.closeCommandsList,\n    containerClassName: 'str-chat__textarea',\n    disabled: disabled || !!cooldownRemaining,\n    disableMentions: messageInput.disableMentions,\n    dropdownClassName: 'str-chat__emojisearch',\n    grow: messageInput.grow,\n    handleSubmit: props.handleSubmit || messageInput.handleSubmit,\n    innerRef: updateInnerRef,\n    itemClassName: 'str-chat__emojisearch__item',\n    keycodeSubmitKeys: messageInput.keycodeSubmitKeys,\n    listClassName: 'str-chat__emojisearch__list',\n    loadingComponent: LoadingIndicator,\n    maxRows: messageInput.maxRows,\n    minChar: 0,\n    onChange: props.onChange || messageInput.handleChange,\n    onFocus: props.onFocus,\n    onPaste: props.onPaste || messageInput.onPaste,\n    placeholder: cooldownRemaining ? t('Slow Mode ON') : placeholder,\n    replaceWord: emojiReplace,\n    rows: props.rows || 1,\n    showCommandsList: messageInput.showCommandsList,\n    SuggestionItem: SuggestionItem,\n    SuggestionList: SuggestionList,\n    trigger: messageInput.autocompleteTriggers || {},\n    value: props.value || messageInput.text\n  });\n};\nexport var ChatAutoComplete = React.memo(UnMemoizedChatAutoComplete);","map":{"version":3,"names":["React","useCallback","AutoCompleteTextarea","LoadingIndicator","useMessageInputContext","useTranslationContext","useComponentContext","UnMemoizedChatAutoComplete","props","_a","SuggestionItem","AutocompleteSuggestionItem","SuggestionList","AutocompleteSuggestionList","t","messageInput","cooldownRemaining","disabled","emojiIndex","innerRef","textareaRef","placeholder","emojiReplace","word","found","search","emoji","filter","Boolean","slice","find","emoticons","includes","native","updateInnerRef","ref","current","createElement","additionalTextareaProps","className","closeCommandsList","containerClassName","disableMentions","dropdownClassName","grow","handleSubmit","itemClassName","keycodeSubmitKeys","listClassName","loadingComponent","maxRows","minChar","onChange","handleChange","onFocus","onPaste","replaceWord","rows","showCommandsList","trigger","autocompleteTriggers","value","text","ChatAutoComplete","memo"],"sources":["C:/Users/alekh/Desktop/Medical-App/client/node_modules/stream-chat-react/dist/components/ChatAutoComplete/ChatAutoComplete.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { AutoCompleteTextarea } from '../AutoCompleteTextarea';\nimport { LoadingIndicator } from '../Loading/LoadingIndicator';\nimport { useMessageInputContext } from '../../context/MessageInputContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nvar UnMemoizedChatAutoComplete = function (props) {\n    var _a = useComponentContext(), SuggestionItem = _a.AutocompleteSuggestionItem, SuggestionList = _a.AutocompleteSuggestionList;\n    var t = useTranslationContext().t;\n    var messageInput = useMessageInputContext();\n    var cooldownRemaining = messageInput.cooldownRemaining, disabled = messageInput.disabled, emojiIndex = messageInput.emojiIndex, innerRef = messageInput.textareaRef;\n    var placeholder = props.placeholder || t('Type your message');\n    var emojiReplace = function (word) {\n        var found = (emojiIndex === null || emojiIndex === void 0 ? void 0 : emojiIndex.search(word)) || [];\n        var emoji = found\n            .filter(Boolean)\n            .slice(0, 10)\n            .find(function (_a) {\n            var emoticons = _a.emoticons;\n            return !!(emoticons === null || emoticons === void 0 ? void 0 : emoticons.includes(word));\n        });\n        if (!emoji || !('native' in emoji))\n            return null;\n        return emoji.native;\n    };\n    var updateInnerRef = useCallback(function (ref) {\n        if (innerRef) {\n            innerRef.current = ref;\n        }\n    }, [innerRef]);\n    return (React.createElement(AutoCompleteTextarea, { additionalTextareaProps: messageInput.additionalTextareaProps, className: 'str-chat__textarea__textarea', closeCommandsList: messageInput.closeCommandsList, containerClassName: 'str-chat__textarea', disabled: disabled || !!cooldownRemaining, disableMentions: messageInput.disableMentions, dropdownClassName: 'str-chat__emojisearch', grow: messageInput.grow, handleSubmit: props.handleSubmit || messageInput.handleSubmit, innerRef: updateInnerRef, itemClassName: 'str-chat__emojisearch__item', keycodeSubmitKeys: messageInput.keycodeSubmitKeys, listClassName: 'str-chat__emojisearch__list', loadingComponent: LoadingIndicator, maxRows: messageInput.maxRows, minChar: 0, onChange: props.onChange || messageInput.handleChange, onFocus: props.onFocus, onPaste: props.onPaste || messageInput.onPaste, placeholder: cooldownRemaining ? t('Slow Mode ON') : placeholder, replaceWord: emojiReplace, rows: props.rows || 1, showCommandsList: messageInput.showCommandsList, SuggestionItem: SuggestionItem, SuggestionList: SuggestionList, trigger: messageInput.autocompleteTriggers || {}, value: props.value || messageInput.text }));\n};\nexport var ChatAutoComplete = React.memo(UnMemoizedChatAutoComplete);\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,sBAAsB,QAAQ,mCAAmC;AAC1E,SAASC,qBAAqB,QAAQ,kCAAkC;AACxE,SAASC,mBAAmB,QAAQ,gCAAgC;AACpE,IAAIC,0BAA0B,GAAG,SAAAA,CAAUC,KAAK,EAAE;EAC9C,IAAIC,EAAE,GAAGH,mBAAmB,CAAC,CAAC;IAAEI,cAAc,GAAGD,EAAE,CAACE,0BAA0B;IAAEC,cAAc,GAAGH,EAAE,CAACI,0BAA0B;EAC9H,IAAIC,CAAC,GAAGT,qBAAqB,CAAC,CAAC,CAACS,CAAC;EACjC,IAAIC,YAAY,GAAGX,sBAAsB,CAAC,CAAC;EAC3C,IAAIY,iBAAiB,GAAGD,YAAY,CAACC,iBAAiB;IAAEC,QAAQ,GAAGF,YAAY,CAACE,QAAQ;IAAEC,UAAU,GAAGH,YAAY,CAACG,UAAU;IAAEC,QAAQ,GAAGJ,YAAY,CAACK,WAAW;EACnK,IAAIC,WAAW,GAAGb,KAAK,CAACa,WAAW,IAAIP,CAAC,CAAC,mBAAmB,CAAC;EAC7D,IAAIQ,YAAY,GAAG,SAAAA,CAAUC,IAAI,EAAE;IAC/B,IAAIC,KAAK,GAAG,CAACN,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACO,MAAM,CAACF,IAAI,CAAC,KAAK,EAAE;IACnG,IAAIG,KAAK,GAAGF,KAAK,CACZG,MAAM,CAACC,OAAO,CAAC,CACfC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CACZC,IAAI,CAAC,UAAUrB,EAAE,EAAE;MACpB,IAAIsB,SAAS,GAAGtB,EAAE,CAACsB,SAAS;MAC5B,OAAO,CAAC,EAAEA,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACC,QAAQ,CAACT,IAAI,CAAC,CAAC;IAC7F,CAAC,CAAC;IACF,IAAI,CAACG,KAAK,IAAI,EAAE,QAAQ,IAAIA,KAAK,CAAC,EAC9B,OAAO,IAAI;IACf,OAAOA,KAAK,CAACO,MAAM;EACvB,CAAC;EACD,IAAIC,cAAc,GAAGjC,WAAW,CAAC,UAAUkC,GAAG,EAAE;IAC5C,IAAIhB,QAAQ,EAAE;MACVA,QAAQ,CAACiB,OAAO,GAAGD,GAAG;IAC1B;EACJ,CAAC,EAAE,CAAChB,QAAQ,CAAC,CAAC;EACd,OAAQnB,KAAK,CAACqC,aAAa,CAACnC,oBAAoB,EAAE;IAAEoC,uBAAuB,EAAEvB,YAAY,CAACuB,uBAAuB;IAAEC,SAAS,EAAE,8BAA8B;IAAEC,iBAAiB,EAAEzB,YAAY,CAACyB,iBAAiB;IAAEC,kBAAkB,EAAE,oBAAoB;IAAExB,QAAQ,EAAEA,QAAQ,IAAI,CAAC,CAACD,iBAAiB;IAAE0B,eAAe,EAAE3B,YAAY,CAAC2B,eAAe;IAAEC,iBAAiB,EAAE,uBAAuB;IAAEC,IAAI,EAAE7B,YAAY,CAAC6B,IAAI;IAAEC,YAAY,EAAErC,KAAK,CAACqC,YAAY,IAAI9B,YAAY,CAAC8B,YAAY;IAAE1B,QAAQ,EAAEe,cAAc;IAAEY,aAAa,EAAE,6BAA6B;IAAEC,iBAAiB,EAAEhC,YAAY,CAACgC,iBAAiB;IAAEC,aAAa,EAAE,6BAA6B;IAAEC,gBAAgB,EAAE9C,gBAAgB;IAAE+C,OAAO,EAAEnC,YAAY,CAACmC,OAAO;IAAEC,OAAO,EAAE,CAAC;IAAEC,QAAQ,EAAE5C,KAAK,CAAC4C,QAAQ,IAAIrC,YAAY,CAACsC,YAAY;IAAEC,OAAO,EAAE9C,KAAK,CAAC8C,OAAO;IAAEC,OAAO,EAAE/C,KAAK,CAAC+C,OAAO,IAAIxC,YAAY,CAACwC,OAAO;IAAElC,WAAW,EAAEL,iBAAiB,GAAGF,CAAC,CAAC,cAAc,CAAC,GAAGO,WAAW;IAAEmC,WAAW,EAAElC,YAAY;IAAEmC,IAAI,EAAEjD,KAAK,CAACiD,IAAI,IAAI,CAAC;IAAEC,gBAAgB,EAAE3C,YAAY,CAAC2C,gBAAgB;IAAEhD,cAAc,EAAEA,cAAc;IAAEE,cAAc,EAAEA,cAAc;IAAE+C,OAAO,EAAE5C,YAAY,CAAC6C,oBAAoB,IAAI,CAAC,CAAC;IAAEC,KAAK,EAAErD,KAAK,CAACqD,KAAK,IAAI9C,YAAY,CAAC+C;EAAK,CAAC,CAAC;AACrpC,CAAC;AACD,OAAO,IAAIC,gBAAgB,GAAG/D,KAAK,CAACgE,IAAI,CAACzD,0BAA0B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}