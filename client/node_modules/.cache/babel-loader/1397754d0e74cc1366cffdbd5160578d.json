{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { FileUploadButton, ImageDropzone } from 'react-file-utils';\nimport { EmojiPicker } from './EmojiPicker';\nimport { EmojiIconSmall as DefaultEmojiIcon, FileUploadIcon as DefaultFileUploadIcon } from './icons';\nimport { UploadsPreview } from './UploadsPreview';\nimport { KEY_CODES } from '../AutoCompleteTextarea/listener';\nimport { ChatAutoComplete } from '../ChatAutoComplete/ChatAutoComplete';\nimport { Tooltip } from '../Tooltip/Tooltip';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useMessageInputContext } from '../../context/MessageInputContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nexport var EditMessageForm = function () {\n  var _a = useChannelStateContext(),\n    acceptedFiles = _a.acceptedFiles,\n    multipleUploads = _a.multipleUploads;\n  var t = useTranslationContext().t;\n  var _b = useMessageInputContext(),\n    clearEditingState = _b.clearEditingState,\n    handleSubmit = _b.handleSubmit,\n    isUploadEnabled = _b.isUploadEnabled,\n    maxFilesLeft = _b.maxFilesLeft,\n    openEmojiPicker = _b.openEmojiPicker,\n    uploadNewFiles = _b.uploadNewFiles;\n  var _c = useComponentContext(),\n    _d = _c.EmojiIcon,\n    EmojiIcon = _d === void 0 ? DefaultEmojiIcon : _d,\n    _e = _c.FileUploadIcon,\n    FileUploadIcon = _e === void 0 ? DefaultFileUploadIcon : _e;\n  useEffect(function () {\n    var onKeyDown = function (event) {\n      if (event.keyCode === KEY_CODES.ESC && clearEditingState) clearEditingState();\n    };\n    document.addEventListener('keydown', onKeyDown);\n    return function () {\n      return document.removeEventListener('keydown', onKeyDown);\n    };\n  }, [clearEditingState]);\n  return React.createElement(\"div\", {\n    className: 'str-chat__edit-message-form'\n  }, React.createElement(ImageDropzone, {\n    accept: acceptedFiles,\n    disabled: !isUploadEnabled || maxFilesLeft === 0,\n    handleFiles: uploadNewFiles,\n    maxNumberOfFiles: maxFilesLeft,\n    multiple: multipleUploads\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, isUploadEnabled && React.createElement(UploadsPreview, null), React.createElement(EmojiPicker, {\n    small: true\n  }), React.createElement(ChatAutoComplete, null), React.createElement(\"div\", {\n    className: 'str-chat__message-team-form-footer'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__edit-message-form-options'\n  }, React.createElement(\"span\", {\n    className: 'str-chat__input-emojiselect',\n    onClick: openEmojiPicker\n  }, React.createElement(EmojiIcon, null)), isUploadEnabled && React.createElement(\"div\", {\n    className: 'str-chat__fileupload-wrapper',\n    \"data-testid\": 'fileinput'\n  }, React.createElement(Tooltip, null, maxFilesLeft ? t('Attach files') : t(\"You've reached the maximum number of files\")), React.createElement(FileUploadButton, {\n    accepts: acceptedFiles,\n    disabled: maxFilesLeft === 0,\n    handleFiles: uploadNewFiles,\n    multiple: multipleUploads\n  }, React.createElement(\"span\", {\n    className: 'str-chat__input-fileupload'\n  }, React.createElement(FileUploadIcon, null))))), React.createElement(\"div\", null, React.createElement(\"button\", {\n    onClick: function () {\n      if (clearEditingState) {\n        clearEditingState();\n      }\n    }\n  }, t('Cancel')), React.createElement(\"button\", {\n    type: 'submit'\n  }, t('Send')))))));\n};","map":{"version":3,"names":["React","useEffect","FileUploadButton","ImageDropzone","EmojiPicker","EmojiIconSmall","DefaultEmojiIcon","FileUploadIcon","DefaultFileUploadIcon","UploadsPreview","KEY_CODES","ChatAutoComplete","Tooltip","useChannelStateContext","useTranslationContext","useMessageInputContext","useComponentContext","EditMessageForm","_a","acceptedFiles","multipleUploads","t","_b","clearEditingState","handleSubmit","isUploadEnabled","maxFilesLeft","openEmojiPicker","uploadNewFiles","_c","_d","EmojiIcon","_e","onKeyDown","event","keyCode","ESC","document","addEventListener","removeEventListener","createElement","className","accept","disabled","handleFiles","maxNumberOfFiles","multiple","onSubmit","small","onClick","accepts","type"],"sources":["C:/Users/alekh/Desktop/Medical-App/client/node_modules/stream-chat-react/dist/components/MessageInput/EditMessageForm.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { FileUploadButton, ImageDropzone } from 'react-file-utils';\nimport { EmojiPicker } from './EmojiPicker';\nimport { EmojiIconSmall as DefaultEmojiIcon, FileUploadIcon as DefaultFileUploadIcon, } from './icons';\nimport { UploadsPreview } from './UploadsPreview';\nimport { KEY_CODES } from '../AutoCompleteTextarea/listener';\nimport { ChatAutoComplete } from '../ChatAutoComplete/ChatAutoComplete';\nimport { Tooltip } from '../Tooltip/Tooltip';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useMessageInputContext } from '../../context/MessageInputContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nexport var EditMessageForm = function () {\n    var _a = useChannelStateContext(), acceptedFiles = _a.acceptedFiles, multipleUploads = _a.multipleUploads;\n    var t = useTranslationContext().t;\n    var _b = useMessageInputContext(), clearEditingState = _b.clearEditingState, handleSubmit = _b.handleSubmit, isUploadEnabled = _b.isUploadEnabled, maxFilesLeft = _b.maxFilesLeft, openEmojiPicker = _b.openEmojiPicker, uploadNewFiles = _b.uploadNewFiles;\n    var _c = useComponentContext(), _d = _c.EmojiIcon, EmojiIcon = _d === void 0 ? DefaultEmojiIcon : _d, _e = _c.FileUploadIcon, FileUploadIcon = _e === void 0 ? DefaultFileUploadIcon : _e;\n    useEffect(function () {\n        var onKeyDown = function (event) {\n            if (event.keyCode === KEY_CODES.ESC && clearEditingState)\n                clearEditingState();\n        };\n        document.addEventListener('keydown', onKeyDown);\n        return function () { return document.removeEventListener('keydown', onKeyDown); };\n    }, [clearEditingState]);\n    return (React.createElement(\"div\", { className: 'str-chat__edit-message-form' },\n        React.createElement(ImageDropzone, { accept: acceptedFiles, disabled: !isUploadEnabled || maxFilesLeft === 0, handleFiles: uploadNewFiles, maxNumberOfFiles: maxFilesLeft, multiple: multipleUploads },\n            React.createElement(\"form\", { onSubmit: handleSubmit },\n                isUploadEnabled && React.createElement(UploadsPreview, null),\n                React.createElement(EmojiPicker, { small: true }),\n                React.createElement(ChatAutoComplete, null),\n                React.createElement(\"div\", { className: 'str-chat__message-team-form-footer' },\n                    React.createElement(\"div\", { className: 'str-chat__edit-message-form-options' },\n                        React.createElement(\"span\", { className: 'str-chat__input-emojiselect', onClick: openEmojiPicker },\n                            React.createElement(EmojiIcon, null)),\n                        isUploadEnabled && (React.createElement(\"div\", { className: 'str-chat__fileupload-wrapper', \"data-testid\": 'fileinput' },\n                            React.createElement(Tooltip, null, maxFilesLeft\n                                ? t('Attach files')\n                                : t(\"You've reached the maximum number of files\")),\n                            React.createElement(FileUploadButton, { accepts: acceptedFiles, disabled: maxFilesLeft === 0, handleFiles: uploadNewFiles, multiple: multipleUploads },\n                                React.createElement(\"span\", { className: 'str-chat__input-fileupload' },\n                                    React.createElement(FileUploadIcon, null)))))),\n                    React.createElement(\"div\", null,\n                        React.createElement(\"button\", { onClick: function () {\n                                if (clearEditingState) {\n                                    clearEditingState();\n                                }\n                            } }, t('Cancel')),\n                        React.createElement(\"button\", { type: 'submit' }, t('Send'))))))));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}