{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alekh\\\\Desktop\\\\Medical-App\\\\client\\\\src\\\\components\\\\ChannelSearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport { SearchIcon } from '../assets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChannelSearch = () => {\n  _s();\n  const {\n    client,\n    setActiveChannel\n  } = useChatContext();\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [teamChannels, setTeamChannels] = useState([]);\n  const getChannels = async text => {\n    try {\n      //TODO: Fetch channels\n    } catch (error) {\n      setQuery('');\n    }\n  };\n  const onSearch = event => {\n    event.preventDefault();\n    setLoading(true);\n    setQuery(event.target.value);\n    getChannels(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channel-search__container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-search__input__wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"channel-search__input__icon\",\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"channel-search__input__text\",\n        placeholder: \"Search\",\n        type: \"text\",\n        value: query,\n        onChange: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ChannelSearch, \"O24gfXen1aMCfj2W2vu09YK703o=\", false, function () {\n  return [useChatContext];\n});\n_c = ChannelSearch;\nexport default ChannelSearch;\nvar _c;\n$RefreshReg$(_c, \"ChannelSearch\");","map":{"version":3,"names":["React","useState","useEffect","useChatContext","SearchIcon","jsxDEV","_jsxDEV","ChannelSearch","_s","client","setActiveChannel","query","setQuery","loading","setLoading","teamChannels","setTeamChannels","getChannels","text","error","onSearch","event","preventDefault","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/alekh/Desktop/Medical-App/client/src/components/ChannelSearch.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useChatContext } from 'stream-chat-react';\r\n\r\nimport { SearchIcon } from '../assets';\r\n\r\nconst ChannelSearch = () => {\r\n const { client, setActiveChannel } = useChatContext();\r\n const [query, setQuery] = useState('');\r\n const [loading, setLoading] = useState(false);\r\n const [teamChannels, setTeamChannels] = useState([])\r\n\r\n const getChannels = async (text) => {\r\n    try {\r\n        //TODO: Fetch channels\r\n    } catch (error) {\r\n        setQuery('')\r\n    }\r\n }\r\n\r\n const onSearch = (event) => {\r\n    event.preventDefault();\r\n\r\n    setLoading(true);\r\n    setQuery(event.target.value);\r\n    getChannels(event.target.value)\r\n }\r\n \r\n  return (\r\n    <div className=\"channel-search__container\">\r\n      <div className=\"channel-search__input__wrapper\">\r\n            <div className=\"channel-search__input__icon\">\r\n                <SearchIcon />\r\n            </div>\r\n            <input className=\"channel-search__input__text\"\r\n            placeholder=\"Search\" \r\n            type=\"text\" \r\n            value={query} \r\n            onChange = {onSearch}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChannelSearch\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,mBAAmB;AAElD,SAASC,UAAU,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC,MAAM;IAAEC;EAAiB,CAAC,GAAGP,cAAc,CAAC,CAAC;EACrD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMgB,WAAW,GAAG,MAAOC,IAAI,IAAK;IACjC,IAAI;MACA;IAAA,CACH,CAAC,OAAOC,KAAK,EAAE;MACZP,QAAQ,CAAC,EAAE,CAAC;IAChB;EACH,CAAC;EAED,MAAMQ,QAAQ,GAAIC,KAAK,IAAK;IACzBA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtBR,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAACS,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;IAC5BP,WAAW,CAACI,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAEA,oBACElB,OAAA;IAAKmB,SAAS,EAAC,2BAA2B;IAAAC,QAAA,eACxCpB,OAAA;MAAKmB,SAAS,EAAC,gCAAgC;MAAAC,QAAA,gBACzCpB,OAAA;QAAKmB,SAAS,EAAC,6BAA6B;QAAAC,QAAA,eACxCpB,OAAA,CAACF,UAAU;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eACNxB,OAAA;QAAOmB,SAAS,EAAC,6BAA6B;QAC9CM,WAAW,EAAC,QAAQ;QACpBC,IAAI,EAAC,MAAM;QACXR,KAAK,EAAEb,KAAM;QACbsB,QAAQ,EAAIb;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAtB,EAAA,CApCKD,aAAa;EAAA,QACmBJ,cAAc;AAAA;AAAA+B,EAAA,GAD9C3B,aAAa;AAsCnB,eAAeA,aAAa;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}