{"ast":null,"code":"import { useMemo } from 'react';\nimport { getGroupStyles, insertIntro, processMessages } from '../utils';\nimport { useChatContext } from '../../../context/ChatContext';\nimport { useComponentContext } from '../../../context/ComponentContext';\nexport var useEnrichedMessages = function (args) {\n  var channel = args.channel,\n    disableDateSeparator = args.disableDateSeparator,\n    headerPosition = args.headerPosition,\n    hideDeletedMessages = args.hideDeletedMessages,\n    hideNewMessageSeparator = args.hideNewMessageSeparator,\n    messages = args.messages,\n    noGroupByUser = args.noGroupByUser,\n    threadList = args.threadList;\n  var client = useChatContext().client;\n  var HeaderComponent = useComponentContext().HeaderComponent;\n  var lastRead = useMemo(function () {\n    var _a;\n    return (_a = channel.lastRead) === null || _a === void 0 ? void 0 : _a.call(channel);\n  }, [channel]);\n  var messagesWithDates = disableDateSeparator && !hideDeletedMessages && hideNewMessageSeparator ? messages : processMessages({\n    disableDateSeparator: disableDateSeparator,\n    hideDeletedMessages: hideDeletedMessages,\n    hideNewMessageSeparator: hideNewMessageSeparator,\n    lastRead: lastRead,\n    messages: messages,\n    threadList: threadList,\n    userId: client.userID || ''\n  });\n  if (HeaderComponent) {\n    messagesWithDates = insertIntro(messagesWithDates, headerPosition);\n  }\n  var messageGroupStyles = useMemo(function () {\n    return messagesWithDates.reduce(function (acc, message, i) {\n      var style = getGroupStyles(message, messagesWithDates[i - 1], messagesWithDates[i + 1], noGroupByUser);\n      if (style) acc[message.id] = style;\n      return acc;\n    }, {});\n  }, [messagesWithDates, noGroupByUser]);\n  return {\n    messageGroupStyles: messageGroupStyles,\n    messages: messagesWithDates\n  };\n};","map":{"version":3,"names":["useMemo","getGroupStyles","insertIntro","processMessages","useChatContext","useComponentContext","useEnrichedMessages","args","channel","disableDateSeparator","headerPosition","hideDeletedMessages","hideNewMessageSeparator","messages","noGroupByUser","threadList","client","HeaderComponent","lastRead","_a","call","messagesWithDates","userId","userID","messageGroupStyles","reduce","acc","message","i","style","id"],"sources":["C:/Users/alekh/Desktop/Medical-App/client/node_modules/stream-chat-react/dist/components/MessageList/hooks/useEnrichedMessages.js"],"sourcesContent":["import { useMemo } from 'react';\nimport { getGroupStyles, insertIntro, processMessages } from '../utils';\nimport { useChatContext } from '../../../context/ChatContext';\nimport { useComponentContext } from '../../../context/ComponentContext';\nexport var useEnrichedMessages = function (args) {\n    var channel = args.channel, disableDateSeparator = args.disableDateSeparator, headerPosition = args.headerPosition, hideDeletedMessages = args.hideDeletedMessages, hideNewMessageSeparator = args.hideNewMessageSeparator, messages = args.messages, noGroupByUser = args.noGroupByUser, threadList = args.threadList;\n    var client = useChatContext().client;\n    var HeaderComponent = useComponentContext().HeaderComponent;\n    var lastRead = useMemo(function () { var _a; return (_a = channel.lastRead) === null || _a === void 0 ? void 0 : _a.call(channel); }, [channel]);\n    var messagesWithDates = disableDateSeparator && !hideDeletedMessages && hideNewMessageSeparator\n        ? messages\n        : processMessages({\n            disableDateSeparator: disableDateSeparator,\n            hideDeletedMessages: hideDeletedMessages,\n            hideNewMessageSeparator: hideNewMessageSeparator,\n            lastRead: lastRead,\n            messages: messages,\n            threadList: threadList,\n            userId: client.userID || '',\n        });\n    if (HeaderComponent) {\n        messagesWithDates = insertIntro(messagesWithDates, headerPosition);\n    }\n    var messageGroupStyles = useMemo(function () {\n        return messagesWithDates.reduce(function (acc, message, i) {\n            var style = getGroupStyles(message, messagesWithDates[i - 1], messagesWithDates[i + 1], noGroupByUser);\n            if (style)\n                acc[message.id] = style;\n            return acc;\n        }, {});\n    }, [messagesWithDates, noGroupByUser]);\n    return { messageGroupStyles: messageGroupStyles, messages: messagesWithDates };\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,cAAc,EAAEC,WAAW,EAAEC,eAAe,QAAQ,UAAU;AACvE,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,mBAAmB,QAAQ,mCAAmC;AACvE,OAAO,IAAIC,mBAAmB,GAAG,SAAAA,CAAUC,IAAI,EAAE;EAC7C,IAAIC,OAAO,GAAGD,IAAI,CAACC,OAAO;IAAEC,oBAAoB,GAAGF,IAAI,CAACE,oBAAoB;IAAEC,cAAc,GAAGH,IAAI,CAACG,cAAc;IAAEC,mBAAmB,GAAGJ,IAAI,CAACI,mBAAmB;IAAEC,uBAAuB,GAAGL,IAAI,CAACK,uBAAuB;IAAEC,QAAQ,GAAGN,IAAI,CAACM,QAAQ;IAAEC,aAAa,GAAGP,IAAI,CAACO,aAAa;IAAEC,UAAU,GAAGR,IAAI,CAACQ,UAAU;EACtT,IAAIC,MAAM,GAAGZ,cAAc,CAAC,CAAC,CAACY,MAAM;EACpC,IAAIC,eAAe,GAAGZ,mBAAmB,CAAC,CAAC,CAACY,eAAe;EAC3D,IAAIC,QAAQ,GAAGlB,OAAO,CAAC,YAAY;IAAE,IAAImB,EAAE;IAAE,OAAO,CAACA,EAAE,GAAGX,OAAO,CAACU,QAAQ,MAAM,IAAI,IAAIC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,IAAI,CAACZ,OAAO,CAAC;EAAE,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAChJ,IAAIa,iBAAiB,GAAGZ,oBAAoB,IAAI,CAACE,mBAAmB,IAAIC,uBAAuB,GACzFC,QAAQ,GACRV,eAAe,CAAC;IACdM,oBAAoB,EAAEA,oBAAoB;IAC1CE,mBAAmB,EAAEA,mBAAmB;IACxCC,uBAAuB,EAAEA,uBAAuB;IAChDM,QAAQ,EAAEA,QAAQ;IAClBL,QAAQ,EAAEA,QAAQ;IAClBE,UAAU,EAAEA,UAAU;IACtBO,MAAM,EAAEN,MAAM,CAACO,MAAM,IAAI;EAC7B,CAAC,CAAC;EACN,IAAIN,eAAe,EAAE;IACjBI,iBAAiB,GAAGnB,WAAW,CAACmB,iBAAiB,EAAEX,cAAc,CAAC;EACtE;EACA,IAAIc,kBAAkB,GAAGxB,OAAO,CAAC,YAAY;IACzC,OAAOqB,iBAAiB,CAACI,MAAM,CAAC,UAAUC,GAAG,EAAEC,OAAO,EAAEC,CAAC,EAAE;MACvD,IAAIC,KAAK,GAAG5B,cAAc,CAAC0B,OAAO,EAAEN,iBAAiB,CAACO,CAAC,GAAG,CAAC,CAAC,EAAEP,iBAAiB,CAACO,CAAC,GAAG,CAAC,CAAC,EAAEd,aAAa,CAAC;MACtG,IAAIe,KAAK,EACLH,GAAG,CAACC,OAAO,CAACG,EAAE,CAAC,GAAGD,KAAK;MAC3B,OAAOH,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;EACV,CAAC,EAAE,CAACL,iBAAiB,EAAEP,aAAa,CAAC,CAAC;EACtC,OAAO;IAAEU,kBAAkB,EAAEA,kBAAkB;IAAEX,QAAQ,EAAEQ;EAAkB,CAAC;AAClF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}