{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alekh\\\\Desktop\\\\Medical-App\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { StreamChat } from 'stream-chat';\nimport { Chat } from 'stream-chat-react';\nimport Cookies from 'universal-cookie';\nimport { ChannelListContainer, ChannelContainer, Auth } from './components';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\nconst apiKey = 's3ffnejxvfux';\nconst authToken = cookies.get(\"token\");\nconst client = StreamChat.getInstance(apiKey);\nif (authToken) {\n  client.connectUser({\n    id: cookies.get('userId'),\n    name: cookies.get('username'),\n    fullName: cookies.get('fullName'),\n    image: cookies.get('avatarURL'),\n    hashedPassword: cookies.get('hashedPassword'),\n    phoneNumber: cookies.get('phoneNumber')\n  }, authToken);\n}\nconst App = () => {\n  _s();\n  const [createType, setCreateType] = useState('');\n  const [isCreating, setIsCreating] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  if (!authToken) return /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app__wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Chat, {\n      client: client,\n      theme: \"team light\",\n      children: [/*#__PURE__*/_jsxDEV(ChannelListContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChannelContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ShGhD4QBYV0nuWr2tNMbH2vxuRQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","StreamChat","Chat","Cookies","ChannelListContainer","ChannelContainer","Auth","jsxDEV","_jsxDEV","cookies","apiKey","authToken","get","client","getInstance","connectUser","id","name","fullName","image","hashedPassword","phoneNumber","App","_s","createType","setCreateType","isCreating","setIsCreating","isEditing","setIsEditing","fileName","_jsxFileName","lineNumber","columnNumber","className","children","theme","_c","$RefreshReg$"],"sources":["C:/Users/alekh/Desktop/Medical-App/client/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StreamChat } from 'stream-chat';\r\nimport { Chat } from 'stream-chat-react';\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport { ChannelListContainer, ChannelContainer, Auth } from './components';\r\n\r\nimport './App.css';\r\nconst cookies = new Cookies();\r\n\r\nconst apiKey = 's3ffnejxvfux';\r\nconst authToken = cookies.get(\"token\");\r\n\r\nconst client = StreamChat.getInstance(apiKey);\r\n\r\nif(authToken) {\r\n    client.connectUser({\r\n        id: cookies.get('userId'),\r\n        name: cookies.get('username'),\r\n        fullName: cookies.get('fullName'),\r\n        image: cookies.get('avatarURL'),\r\n        hashedPassword: cookies.get('hashedPassword'),\r\n        phoneNumber: cookies.get('phoneNumber'),\r\n    }, authToken)\r\n}\r\n\r\n\r\nconst App = () => {\r\n  const [createType, setCreateType] = useState('');\r\n  const [isCreating, setIsCreating] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  if(!authToken) return <Auth />\r\n\r\n  return (\r\n    <div className = \"app__wrapper\">\r\n      <Chat client = {client} theme = \"team light\">\r\n        <ChannelListContainer \r\n        \r\n        />\r\n        <ChannelContainer \r\n        \r\n        />\r\n      </Chat>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,aAAa;AACxC,SAASC,IAAI,QAAQ,mBAAmB;AACxC,OAAOC,OAAO,MAAM,kBAAkB;AAEtC,SAASC,oBAAoB,EAAEC,gBAAgB,EAAEC,IAAI,QAAQ,cAAc;AAE3E,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnB,MAAMC,OAAO,GAAG,IAAIN,OAAO,CAAC,CAAC;AAE7B,MAAMO,MAAM,GAAG,cAAc;AAC7B,MAAMC,SAAS,GAAGF,OAAO,CAACG,GAAG,CAAC,OAAO,CAAC;AAEtC,MAAMC,MAAM,GAAGZ,UAAU,CAACa,WAAW,CAACJ,MAAM,CAAC;AAE7C,IAAGC,SAAS,EAAE;EACVE,MAAM,CAACE,WAAW,CAAC;IACfC,EAAE,EAAEP,OAAO,CAACG,GAAG,CAAC,QAAQ,CAAC;IACzBK,IAAI,EAAER,OAAO,CAACG,GAAG,CAAC,UAAU,CAAC;IAC7BM,QAAQ,EAAET,OAAO,CAACG,GAAG,CAAC,UAAU,CAAC;IACjCO,KAAK,EAAEV,OAAO,CAACG,GAAG,CAAC,WAAW,CAAC;IAC/BQ,cAAc,EAAEX,OAAO,CAACG,GAAG,CAAC,gBAAgB,CAAC;IAC7CS,WAAW,EAAEZ,OAAO,CAACG,GAAG,CAAC,aAAa;EAC1C,CAAC,EAAED,SAAS,CAAC;AACjB;AAGA,MAAMW,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC0B,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EAEjD,IAAG,CAACW,SAAS,EAAE,oBAAOH,OAAA,CAACF,IAAI;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAE9B,oBACEzB,OAAA;IAAK0B,SAAS,EAAG,cAAc;IAAAC,QAAA,eAC7B3B,OAAA,CAACN,IAAI;MAACW,MAAM,EAAIA,MAAO;MAACuB,KAAK,EAAG,YAAY;MAAAD,QAAA,gBAC1C3B,OAAA,CAACJ,oBAAoB;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEpB,CAAC,eACFzB,OAAA,CAACH,gBAAgB;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAAV,EAAA,CAnBKD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAqBT,eAAeA,GAAG;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}